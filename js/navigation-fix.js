// –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
    setTimeout(initializeNavigation, 500);
});

function initializeNavigation() {
    console.log('üîó –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ"
    const startButtons = document.querySelectorAll('.start-button:not(.calendar-button)');
    startButtons.forEach(button => {
        // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newButton = button.cloneNode(true);
        button.parentNode.replaceChild(newButton, button);
        
        newButton.addEventListener('click', async function(e) {
            e.preventDefault();
            console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É...');
            
            try {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
                if (window.UniversalPageTransitions && !window.UniversalPageTransitions.isTransitioning) {
                    window.UniversalPageTransitions.performTransition('content.html?from=index', 'main-page');
                } else {
                    // –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ—Ö–æ–¥
                    window.location.href = 'content.html?from=index';
                }
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π:', error);
                window.location.href = 'content.html?from=index';
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
    const calendarButtons = document.querySelectorAll('.calendar-button, .start-button.calendar-button');
    calendarButtons.forEach(button => {
        // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newButton = button.cloneNode(true);
        button.parentNode.replaceChild(newButton, button);
        
        newButton.addEventListener('click', async function(e) {
            e.preventDefault();
            console.log('üìÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é...');
            
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                let isAuthenticated = false;
                
                // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ authManager
                if (window.authManager) {
                    // –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è, –∂–¥–µ–º
                    let attempts = 0;
                    while (!window.authManager.isInitialized && attempts < 10) {
                        await new Promise(resolve => setTimeout(resolve, 100));
                        attempts++;
                    }
                    
                    isAuthenticated = window.authManager.isAuthenticated();
                    console.log('üîê –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', isAuthenticated);
                }
                
                const targetUrl = isAuthenticated ? 'calendar.html' : 'auth.html?returnTo=calendar';
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
                if (window.UniversalPageTransitions && !window.UniversalPageTransitions.isTransitioning) {
                    window.UniversalPageTransitions.performTransition(targetUrl, 'calendar-page');
                } else {
                    // –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ—Ö–æ–¥
                    window.location.href = targetUrl;
                }
                
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é:', error);
                // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback - –≤—Å–µ–≥–¥–∞ —á–µ—Ä–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                window.location.href = 'auth.html?returnTo=calendar';
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–∂–µ—Ç–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const calendarWidget = document.getElementById('calendarWidget');
    if (calendarWidget) {
        calendarWidget.addEventListener('click', async function(e) {
            e.preventDefault();
            console.log('üìÖ –ö–ª–∏–∫ –ø–æ –≤–∏–¥–∂–µ—Ç—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
            
            try {
                let isAuthenticated = false;
                
                if (window.authManager) {
                    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                    let attempts = 0;
                    while (!window.authManager.isInitialized && attempts < 10) {
                        await new Promise(resolve => setTimeout(resolve, 100));
                        attempts++;
                    }
                    isAuthenticated = window.authManager.isAuthenticated();
                }
                
                const targetUrl = isAuthenticated ? 'calendar.html' : 'auth.html?returnTo=calendar';
                
                if (window.UniversalPageTransitions && !window.UniversalPageTransitions.isTransitioning) {
                    window.UniversalPageTransitions.performTransition(targetUrl, 'to-calendar');
                } else {
                    window.location.href = targetUrl;
                }
                
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∏–¥–∂–µ—Ç–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
                window.location.href = 'auth.html?returnTo=calendar';
            }
        });
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupAdditionalNavigation();
    
    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}

function setupAdditionalNavigation() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞
    const backButtons = document.querySelectorAll('.back-btn, [href="index.html"]');
    backButtons.forEach(button => {
        if (button.dataset.navigationSetup) return; // –ò–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        button.dataset.navigationSetup = 'true';
        
        button.addEventListener('click', function(e) {
            const href = this.getAttribute('href');
            if (href && (href === 'index.html' || href.includes('index.html'))) {
                e.preventDefault();
                
                try {
                    if (window.UniversalPageTransitions && !window.UniversalPageTransitions.isTransitioning) {
                        window.UniversalPageTransitions.performTransition('index.html', 'back-to-main');
                    } else {
                        window.location.href = 'index.html';
                    }
                } catch (error) {
                    window.location.href = 'index.html';
                }
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤—ã—Ö–æ–¥–∞
    const logoutButtons = document.querySelectorAll('#logoutBtn, .logout-btn');
    logoutButtons.forEach(button => {
        if (button.dataset.logoutSetup) return;
        button.dataset.logoutSetup = 'true';
        
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            console.log('üëã –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...');
            
            try {
                // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥
                if (window.authManager && window.authManager.logout) {
                    await window.authManager.logout();
                } else {
                    // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é
                    localStorage.removeItem('authToken');
                    localStorage.removeItem('currentUser');
                    if (window.PersistentStorage) {
                        window.PersistentStorage.removeItem('authToken');
                        window.PersistentStorage.removeItem('currentUser');
                    }
                }
                
                // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                if (window.UniversalPageTransitions && !window.UniversalPageTransitions.isTransitioning) {
                    window.UniversalPageTransitions.performTransition('index.html', 'logout');
                } else {
                    window.location.href = 'index.html';
                }
                
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
                window.location.href = 'index.html';
            }
        });
    });
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ DOMContentLoaded —É–∂–µ –ø—Ä–æ—à–µ–ª
if (document.readyState === 'loading') {
    // DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—ã—à–µ
} else {
    // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
    setTimeout(initializeNavigation, 100);
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
window.debugNavigation = function() {
    console.log('=== –û–¢–õ–ê–î–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–ò ===');
    console.log('AuthManager:', window.authManager);
    console.log('AuthManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', window.authManager?.isInitialized);
    console.log('–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', window.authManager?.isAuthenticated());
    console.log('UniversalPageTransitions:', window.UniversalPageTransitions);
    console.log('–ö–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ":', document.querySelectorAll('.start-button:not(.calendar-button)').length);
    console.log('–ö–Ω–æ–ø–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', document.querySelectorAll('.calendar-button').length);
    console.log('–í–∏–¥–∂–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', !!document.getElementById('calendarWidget'));
};

console.log('üîó –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
console.log('üí° –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: debugNavigation()');
