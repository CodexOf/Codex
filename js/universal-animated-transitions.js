/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É index.html, content.html, calendar.html, auth.html
 * —Å –ø–ª–∞–≤–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è –∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
 */

class UniversalAnimatedTransitions {
    constructor() {
        this.isTransitioning = false;
        this.transitionDuration = 1200;
        this.overlay = null;
        this.currentPage = this.detectCurrentPage();
        this.authManager = window.authManager || null;
        
        console.log(`üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${this.currentPage}`);
        this.init();
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    detectCurrentPage() {
        const path = window.location.pathname;
        const filename = path.split('/').pop() || 'index.html';
        
        if (filename === '' || filename === 'index.html') return 'index';
        if (filename === 'content.html') return 'content';
        if (filename === 'calendar.html') return 'calendar';
        if (filename === 'auth.html') return 'auth';
        
        return 'other';
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
     */
    init() {
        try {
            this.createTransitionOverlay();
            this.setupPageSpecificHandlers();
            this.handlePageEntrance();
            this.addTransitionStyles();
            console.log('‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∏–º–∞—Ü–∏–π –≥–æ—Ç–æ–≤–∞');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π:', error);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –æ–≤–µ—Ä–ª–µ—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
     */
    createTransitionOverlay() {
        if (this.overlay || document.getElementById('universalAnimationOverlay')) return;
        
        this.overlay = document.createElement('div');
        this.overlay.id = 'universalAnimationOverlay';
        this.overlay.className = 'universal-transition-overlay';
        this.overlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #000;
            z-index: 999999;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transform: translate3d(0, 0, 0);
        `;
        
        document.body.appendChild(this.overlay);
        console.log('üì± –û–≤–µ—Ä–ª–µ–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω');
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
     */
    addTransitionStyles() {
        if (document.getElementById('universalTransitionStyles')) return;
        
        const style = document.createElement('style');
        style.id = 'universalTransitionStyles';
        style.textContent = `
            .universal-transition-overlay.active {
                opacity: 1 !important;
                pointer-events: auto !important;
            }
            
            body.transitioning {
                overflow: hidden !important;
            }
            
            .fade-out-animation {
                animation: universalFadeOut 0.5s ease-out forwards !important;
            }
            
            .slide-out-animation {
                animation: universalSlideOut 0.6s ease-out forwards !important;
            }
            
            .scale-out-animation {
                animation: universalScaleOut 0.7s ease-out forwards !important;
            }
            
            @keyframes universalFadeOut {
                from {
                    opacity: 1;
                    transform: translateY(0);
                }
                to {
                    opacity: 0;
                    transform: translateY(-20px);
                }
            }
            
            @keyframes universalSlideOut {
                from {
                    opacity: 1;
                    transform: translateX(0);
                }
                to {
                    opacity: 0;
                    transform: translateX(-30px);
                }
            }
            
            @keyframes universalScaleOut {
                from {
                    opacity: 1;
                    transform: scale(1);
                }
                to {
                    opacity: 0;
                    transform: scale(0.95);
                }
            }
            
            /* –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
            .auth-container,
            .auth-container *,
            .form-input,
            .form-button,
            .auth-tab {
                pointer-events: auto !important;
            }
        `;
        
        document.head.appendChild(style);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    setupPageSpecificHandlers() {
        switch (this.currentPage) {
            case 'index':
                this.setupIndexPageHandlers();
                break;
            case 'content':
                this.setupContentPageHandlers();
                break;
            case 'calendar':
                this.setupCalendarPageHandlers();
                break;
            case 'auth':
                this.setupAuthPageHandlers();
                break;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (index.html)
     */
    setupIndexPageHandlers() {
        console.log('üè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ"
        const startButton = document.querySelector('.start-button:not(.calendar-button)');
        if (startButton) {
            this.addTransitionHandler(startButton, 'content.html?from=index', 'main-to-content');
        }
        
        // –ö–Ω–æ–ø–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const calendarButton = document.querySelector('.start-button.calendar-button');
        if (calendarButton) {
            this.addTransitionHandler(calendarButton, null, 'main-to-calendar', () => {
                return this.isAuthenticated() ? 'calendar.html' : 'auth.html?returnTo=calendar';
            });
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (content.html)
     */
    setupContentPageHandlers() {
        console.log('üìñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
        
        // –í–∏–¥–∂–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const calendarWidget = document.getElementById('calendarWidget');
        if (calendarWidget) {
            this.addTransitionHandler(calendarWidget, null, 'content-to-calendar', () => {
                return this.isAuthenticated() ? 'calendar.html' : 'auth.html?returnTo=calendar';
            });
        }
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        this.setupSidebarNavigation();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è (calendar.html)
     */
    setupCalendarPageHandlers() {
        console.log('üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É"
        const backButton = document.querySelector('.back-btn[href="content.html"]');
        if (backButton) {
            this.addTransitionHandler(backButton, 'content.html', 'calendar-to-content');
        }
        
        // –í–∏–¥–∂–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const contentWidget = document.getElementById('contentWidget');
        if (contentWidget) {
            this.addTransitionHandler(contentWidget, 'content.html', 'calendar-to-content');
        }
        
        // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        const logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            this.addTransitionHandler(logoutBtn, 'index.html', 'logout', () => {
                if (this.authManager) {
                    this.authManager.logout();
                }
                return 'index.html';
            });
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (auth.html)
     */
    setupAuthPageHandlers() {
        console.log('üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        
        // –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç"
        const backToSite = document.querySelector('.back-to-site');
        if (backToSite) {
            this.addTransitionHandler(backToSite, 'index.html', 'auth-to-main');
        }
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã —Ñ–æ—Ä–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
        this.setupAuthFormHandlers();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
     */
    setupAuthFormHandlers() {
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');
        
        if (loginForm) {
            loginForm.addEventListener('submit', (e) => {
                // –ü–æ–∑–≤–æ–ª—è–µ–º —Ñ–æ—Ä–º–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å—Å—è, –ø–µ—Ä–µ—Ö–æ–¥ –±—É–¥–µ—Ç –≤ auth.js
                console.log('üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞');
            });
        }
        
        if (registerForm) {
            registerForm.addEventListener('submit', (e) => {
                // –ü–æ–∑–≤–æ–ª—è–µ–º —Ñ–æ—Ä–º–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å—Å—è, –ø–µ—Ä–µ—Ö–æ–¥ –±—É–¥–µ—Ç –≤ auth.js
                console.log('üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
            });
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    setupSidebarNavigation() {
        const sidebarLinks = document.querySelectorAll('.sidebar-nav .nav-btn');
        sidebarLinks.forEach(link => {
            if (link.getAttribute('href') && link.getAttribute('href').startsWith('partials/')) {
                // –≠—Ç–∏ —Å—Å—ã–ª–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã
                return;
            }
        });
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç—É
     */
    addTransitionHandler(element, targetUrl, transitionType, urlResolver = null) {
        if (!element) return;
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newElement = element.cloneNode(true);
        element.parentNode.replaceChild(newElement, element);
        
        newElement.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            
            if (this.isTransitioning) return;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL
            let finalUrl = targetUrl;
            if (urlResolver) {
                finalUrl = urlResolver();
            }
            if (!finalUrl && newElement.getAttribute('href')) {
                finalUrl = newElement.getAttribute('href');
            }
            
            if (!finalUrl) {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞');
                return;
            }
            
            console.log(`üé¨ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥: ${transitionType} -> ${finalUrl}`);
            this.performTransition(finalUrl, transitionType);
        });
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è ${transitionType}`);
    }

    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
     */
    performTransition(targetUrl, transitionType = 'default') {
        if (this.isTransitioning) {
            console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
            return;
        }

        console.log(`üé¨ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥: ${transitionType} -> ${targetUrl}`);
        this.isTransitioning = true;
        document.body.classList.add('transitioning');

        try {
            // –§–∞–∑–∞ 1: –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.animatePageExit(transitionType);

            // –§–∞–∑–∞ 2: –ü–æ—è–≤–ª–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≥–æ –æ–≤–µ—Ä–ª–µ—è
            setTimeout(() => {
                this.overlay.classList.add('active');
            }, 400);

            // –§–∞–∑–∞ 3: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            setTimeout(() => {
                this.navigateToPage(targetUrl, transitionType);
            }, this.transitionDuration);

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏:', error);
            this.fallbackTransition(targetUrl);
        }
    }

    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    animatePageExit(transitionType) {
        console.log(`üåü –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è: ${transitionType}`);
        
        const animations = this.getExitAnimations(transitionType);
        
        animations.forEach(({ selector, animationClass, delay = 0 }) => {
            setTimeout(() => {
                const elements = document.querySelectorAll(selector);
                elements.forEach(element => {
                    element.classList.add(animationClass);
                });
            }, delay);
        });
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
     */
    getExitAnimations(transitionType) {
        const animations = {
            'main-to-content': [
                { selector: '.game-title, .game-subtitle', animationClass: 'fade-out-animation', delay: 0 },
                { selector: '.start-button', animationClass: 'slide-out-animation', delay: 100 },
                { selector: '.main-footer', animationClass: 'fade-out-animation', delay: 200 },
                { selector: '.welcome-screen', animationClass: 'scale-out-animation', delay: 300 }
            ],
            'main-to-calendar': [
                { selector: '.game-title, .game-subtitle', animationClass: 'fade-out-animation', delay: 0 },
                { selector: '.start-button', animationClass: 'slide-out-animation', delay: 100 },
                { selector: '.main-footer', animationClass: 'fade-out-animation', delay: 200 }
            ],
            'content-to-calendar': [
                { selector: '.sidebar', animationClass: 'slide-out-animation', delay: 0 },
                { selector: '.main-content', animationClass: 'fade-out-animation', delay: 100 },
                { selector: '.calendar-widget', animationClass: 'scale-out-animation', delay: 200 }
            ],
            'calendar-to-content': [
                { selector: '.calendar-header', animationClass: 'fade-out-animation', delay: 0 },
                { selector: '.calendar-controls', animationClass: 'slide-out-animation', delay: 100 },
                { selector: '.calendar-grid, .events-list-section', animationClass: 'fade-out-animation', delay: 150 },
                { selector: '.content-widget', animationClass: 'scale-out-animation', delay: 200 }
            ],
            'auth-to-main': [
                { selector: '.auth-container', animationClass: 'scale-out-animation', delay: 0 },
                { selector: '.decorative-bg', animationClass: 'fade-out-animation', delay: 100 }
            ],
            'logout': [
                { selector: '.calendar-container', animationClass: 'fade-out-animation', delay: 0 },
                { selector: '.user-info', animationClass: 'slide-out-animation', delay: 100 }
            ]
        };
        
        return animations[transitionType] || [
            { selector: 'main, .container, .calendar-container, .auth-container', animationClass: 'fade-out-animation', delay: 0 }
        ];
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    handlePageEntrance() {
        const fromTransition = sessionStorage.getItem('pageTransition');
        const transitionType = sessionStorage.getItem('transitionType');
        
        if (fromTransition) {
            console.log(`üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞: ${transitionType}`);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω
            this.overlay.classList.add('active');
            document.body.classList.add('transitioning');
            
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å index.html
            if (transitionType === 'main-to-content') {
                this.handleIndexToContentTransition();
            } else {
                this.handleGenericEntrance();
            }
            
        } else {
            // –û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.handleNormalPageLoad();
        }
    }

    /**
     * –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ index -> content
     */
    handleIndexToContentTransition() {
        // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        const elementsToHide = ['.sidebar', '.main-content', '.calendar-widget'];
        elementsToHide.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) element.style.visibility = 'hidden';
        });
        
        // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => {
            this.overlay.style.transition = 'opacity 1.5s ease-out';
            this.overlay.classList.remove('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            elementsToHide.forEach(selector => {
                const element = document.querySelector(selector);
                if (element) element.style.visibility = 'visible';
            });
            
            setTimeout(() => {
                this.completeEntrance();
            }, 1500);
        }, 500);
    }

    /**
     * –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    handleGenericEntrance() {
        setTimeout(() => {
            this.overlay.classList.remove('active');
            setTimeout(() => {
                this.completeEntrance();
            }, 800);
        }, 300);
    }

    /**
     * –û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    handleNormalPageLoad() {
        setTimeout(() => {
            this.completeEntrance();
        }, 100);
    }

    /**
     * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    completeEntrance() {
        document.body.classList.remove('transitioning');
        document.body.classList.add('animation-complete');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª
        document.documentElement.style.overflow = '';
        document.body.style.overflowY = 'auto';
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        sessionStorage.removeItem('pageTransition');
        sessionStorage.removeItem('transitionType');
        
        console.log('‚úÖ –í—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≤–µ—Ä—à–µ–Ω');
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    navigateToPage(targetUrl, transitionType) {
        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ—Ö–æ–¥–µ
            sessionStorage.setItem('pageTransition', 'true');
            sessionStorage.setItem('transitionType', transitionType);
            
            console.log(`üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: ${targetUrl}`);
            window.location.href = targetUrl;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ:', error);
            this.fallbackTransition(targetUrl);
        } finally {
            this.isTransitioning = false;
        }
    }

    /**
     * –†–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏
     */
    fallbackTransition(targetUrl) {
        console.log('üîÑ –†–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞:', targetUrl);
        this.isTransitioning = false;
        window.location.href = targetUrl;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
     */
    isAuthenticated() {
        if (this.authManager && typeof this.authManager.isAuthenticated === 'function') {
            return this.authManager.isAuthenticated();
        }
        
        // Fallback –ø—Ä–æ–≤–µ—Ä–∫–∞
        const token = localStorage.getItem('authToken');
        const user = localStorage.getItem('currentUser');
        return !!(token && user);
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
     */
    static transitionTo(targetUrl, transitionType = 'programmatic') {
        if (window.universalAnimatedTransitions) {
            window.universalAnimatedTransitions.performTransition(targetUrl, transitionType);
        } else {
            window.location.href = targetUrl;
        }
    }

    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
     */
    getStatus() {
        return {
            currentPage: this.currentPage,
            isTransitioning: this.isTransitioning,
            hasOverlay: !!this.overlay,
            isAuthenticated: this.isAuthenticated()
        };
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –∏–∑ auth.js
 */
window.performAnimatedAuthTransition = function(targetUrl) {
    if (window.universalAnimatedTransitions) {
        window.universalAnimatedTransitions.performTransition(targetUrl, 'auth-success');
    } else {
        window.location.href = targetUrl;
    }
};

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
 */
function initUniversalAnimatedTransitions() {
    if (window.universalAnimatedTransitions) return;
    
    try {
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => {
                setTimeout(() => {
                    window.universalAnimatedTransitions = new UniversalAnimatedTransitions();
                }, 100);
            });
        } else {
            window.universalAnimatedTransitions = new UniversalAnimatedTransitions();
        }
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initUniversalAnimatedTransitions();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
setTimeout(() => {
    if (!window.universalAnimatedTransitions) {
        window.universalAnimatedTransitions = new UniversalAnimatedTransitions();
    }
}, 500);

console.log('üé® –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
